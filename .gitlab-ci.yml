stages:
  - build-dev
  - deploy-dev
  - build-prod
  - deploy-prod


variables:
  FRONTEND_VERSION: 0.0.${CI_PIPELINE_ID}
  GITLAB_API_URL: https://gitlab.nochicorp.com/api/v4
  TOKEN: glptt-ae8a6645d801a56bf72f70c20f239cb71ca3b37c
  DEVOPS_REPOSITORY: 13
  DEVOPS_BRANCH: main  
    
#build-dev-app:
#  stage: build-dev
#  image: docker:20-dind
#  retry: 2
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#    DOCKER_TLS_CERTDIR: ""
#  services:
#    - name: docker:20-dind
#      alias: docker
#      command: [ "--tls=false" ]
#  before_script:
#    - until docker info; do sleep 1; done
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#  script:
#    - docker build --tag $CI_REGISTRY_IMAGE/red/red-frontend:$FRONTEND_VERSION .
#    - docker push $CI_REGISTRY_IMAGE/red/red-frontend:$FRONTEND_VERSION
#
#deploy-dev-app:
#  stage: deploy-dev
#  image: kroniak/ssh-client
#  before_script:
#    - eval $(ssh-agent -s)
#    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#  script:
#    - ssh ${DEV_USER}@${DEV_HOST} 
#      "cd ./docker_services/red_schedule;
#      export "CI_REGISTRY_USER=$CI_REGISTRY_USER";
#      export "CI_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD";
#      export "CI_REGISTRY=$CI_REGISTRY"
#      export "CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE";
#      export "FRONTEND_VERSION=${FRONTEND_VERSION}"; 
#      /bin/bash -s " < deploy.sh
    
build-prod-app:
  stage: build-prod
  image: docker:20-dind
  when: manual
  retry: 2
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:20-dind
      alias: docker
      command: [ "--tls=false" ]
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cat production.prod.env > production.env
    - docker build --tag $CI_REGISTRY_IMAGE/red/red-frontend-prod:$FRONTEND_VERSION .
    - docker push $CI_REGISTRY_IMAGE/red/red-frontend-prod:$FRONTEND_VERSION
      
deploy-prod-app:
  stage: deploy-prod
  image: alpine:3.19.1
  before_script:
    - apk add curl --no-cache
  script:
    - curl --location --request POST "https://gitlab.nochicorp.com/api/v4/projects/${DEVOPS_REPOSITORY}/trigger/pipeline?token=${TOKEN}&ref=${DEVOPS_BRANCH}"
  needs:
    - build-prod-app
      
build-vlad:
  stage: build-dev
  retry: 2
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:20-dind
      alias: docker
      command: [ "--tls=false" ]
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE/red/red-frontend-vlad:$FRONTEND_VERSION . -f DockerfileVlad
    - docker push $CI_REGISTRY_IMAGE/red/red-frontend-vlad:$FRONTEND_VERSION

deploy-vlad:
  stage: deploy-dev
  image: kroniak/ssh-client
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh ${DEV_USER}@${DEV_HOST}
      "cd /home/ubuntu/vlad;
      export "CI_REGISTRY_USER=$CI_REGISTRY_USER";
      export "CI_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD";
      export "CI_REGISTRY=$CI_REGISTRY"
      export "CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE";
      export "FRONTEND_VERSION=${FRONTEND_VERSION}";
      /bin/bash -s " < vlad/deploy.sh
  dependencies:
    - build-vlad
    
  